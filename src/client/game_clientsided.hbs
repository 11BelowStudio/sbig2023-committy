<!DOCTYPE html>
<html>
    <head>
        

        <title>
            {{seo.title}}
        </title>

        <meta name="robots" content="noindex, nofollow">

        <link rel="canonical" href="{{url}}">
        <meta name="description" content="{{seo.description}}">
        <meta property="og:title" content="{{seo.title}}">
        <meta property="og:type" content="website">
        <meta property="og:url" content="{{url}}">
        <meta property="og:description" content="{{seo.description}}">
        <meta property="og:image" content="{{seo.image}}">
        <meta name="twitter:card" content="summary">


        <link rel="stylesheet" type="text/css" href="/assets/css/style.css"/>
        <link rel="stylesheet" type="text/css" href="/assets/css/card.css"/>
        <link rel="stylesheet" type="text/css" href="/assets/css/cols.css"/>
        
        <link rel="stylesheet" type="text/css" href="/assets/css/game_css/game.css"/>
        
    </head>
    <body>
        

        <template id="card_template">
            <div class="card_holder">
                <div class="card hand_card" onclick="">
                    <div class="card_inner"></div>
                    <div class="card_details hand_card_details">
                        <div class="card_title">???</div>
                        <div class="card_icon_holder">
                            <img class="card_icon" src=""/>
                        </div>
                        <div class="card_stats_parent">
                            <div class="card_stats_cell card_stat_1">
                                <div class="card_stat_icon"></div>
                                <div class="card_stat_number">???</div>
                            </div>
                            <div class="card_stats_cell card_stat_2">
                                <div class="card_stat_icon"></div>
                                <div class="card_stat_number">???</div>
                            </div>
                            <div class="card_stats_cell card_stat_3">
                                <div class="card_stat_icon"></div>
                                <div class="card_stat_number">???</div>
                            </div>
                            <div class="card_stats_cell card_stat_4">
                                <div class="card_stat_icon"></div>
                                <div class="card_stat_number">???</div>
                            </div>
                        </div>
                        <div class="card_description">
                            ???
                        </div>
                        <div class="card_number">#???</div>
                    </div>
                </div>
            </div>
        </template>

        <div class="wrap">

            <div class="sidebar">
                <div>
                    <h1>The clientside version of<br>
                    <img src="/assets/icons/committy.svg" alt="Committy!"/></h1>
                </div>
                <div>
                    <p>Both players need to pick a card from their hand!</p>
                    <p>this game's URL suffix: <code>{{ url }}</code></p>
                    <p>
                        Click a card once to select it. Click it again to hide your selection.
                    </p>
                </div>

                <div>
                    <h2>
                        Instructions
                    </h2>
                    <ol>
                        <li>
                            Pick the card that you think will beat whatever card your opponent will play.
                        </li>
                        <li>
                            Press the button below to proceed to the next step
                        </li>
                    </ol>
                    <button onclick="next_pressed()">Proceed!</button>
                </div>
                

                <div>
                    <h2><a href="/">back</a></h2>
                </div>
            </div>

            <div class="content">

                <div id="player_1_div">
                    <h2>Player 1 has <span id="p1_selection">not chosen a card</span>!</h2>

                    <div class="hand_menu" id="player_1_hand">
                        <!-- this gets filled automatically with your cards -->
                    </div>
                </div>

                <div id="player_2_div">
                    <h2>Player A has <span id="p2_selection">not chosen a card</span>!</h2>
                    <div class="hand_menu" id="player_2_hand">
                        <!-- this also gets filled automatically with cards -->
                    </div>
                </div>
            </div>

        </div>

        
        
        
       

        <script type="text/javascript" src="/scripts/audio_check.js"></script>
        <script type="text/javascript" src="/scripts/card_consts.js"></script>
        <script type="text/javascript" src="/imports/howler.min.js"></script>

        <script>
            

            let p1_chosen = null;
            let p1_chosen_element = null;
            let p2_chosen = null;
            let p2_chosen_element = null;

            const bweb = new Howl({
                src: ["/assets/audio/bweb.ogg"],
                html5: true,
                volume: 1.0
            });
            const bwoab = new Howl({
                src: ["/assets/audio/bwoab.ogg"],
                html5: true,
                volume: 1.0
            });

            const disapprove = new Howl({
                src: ["/assets/audio/disapproval.ogg"],
                html5:true,
                volume:1.0
            });

            function next_pressed(){

                if (p1_chosen == null || p1_chosen == NaN){
                    window.alert("Player 1 needs to choose a card!");
                    disapprove.play();
                    return;
                }
                else if (p2_chosen == null || p2_chosen == NaN){
                    window.alert("Player A needs to choose a card!");
                    disapprove.play();
                    return;
                }

                window.location.replace(`/game/chosen/${p1_chosen}/${p2_chosen}`);
                //window.location.replace(`/game/chosen/${p1_chosen}/${p2_chosen}`);
            }

            
            function p1_selected_card(id, card_element){
                p1_chosen = id;
                document.getElementById("p1_selection").innerHTML = `chosen card ${id}`;

                bweb.play();

                if (p1_chosen_element != null){
                    p1_chosen_element.classList.toggle("selected_card");
                    if (p1_chosen_element == card_element){
                        //card_element.classList.toggle("selected_card");
                        document.getElementById("p1_selection").innerHTML = `chosen a card!`;
                    } else{
                        p1_chosen_element.classList.toggle("selected_card", false);
                    }
                    p1_chosen_element = card_element;
                }
                else {
                    card_element.classList.toggle("selected_card",true);
                    p1_chosen_element = card_element;
                }
                
            }

            function p2_selected_card(id, card_element){
                p2_chosen = id;
                bwoab.play();
                document.getElementById("p2_selection").innerHTML = `chosen card ${id}`;
                if (p2_chosen_element != null){
                    p2_chosen_element.classList.toggle("selected_card");
                    if (p2_chosen_element == card_element){
                        //card_element.classList.toggle("selected_card");
                        document.getElementById("p2_selection").innerHTML = `chosen a card!`;
                    } else{
                        p2_chosen_element.classList.toggle("selected_card", false);
                    }
                    p2_chosen_element = card_element;

                } else {
                    card_element.classList.toggle("selected_card", true);
                    p2_chosen_element = card_element;
                }
            }



            function generate_card(card_data, is_p1){

                console.log(card_data);


                // obtains template
                const cardTemplate = document.getElementById("card_template");
                //console.log(cardTemplate);
                //console.log(cardTemplate.content);
                //console.log(cardTemplate.content.firstElementChild);

                //deep copy of the first element within template contents
                let new_card_holder = cardTemplate.content.firstElementChild.cloneNode(true);
                //cardTemplate.firstElementChild.cloneNode(true);


                let theCardElement = new_card_holder.querySelector(".card"); 


                theCardElement.classList.add(
                    card_consts.card_id_to_css_class(
                        card_data.id
                    )
                );

                theCardElement.addEventListener(
                    "click",
                    (is_p1) ? function() {
                        p1_selected_card(card_data.id, new_card_holder)
                    } : function(){
                        p2_selected_card(card_data.id, new_card_holder)
                    }
                );

                new_card_holder.querySelector(".card_title").innerText = card_data.title;

                new_card_holder.querySelector(".card_icon").src = card_data.img;

                new_card_holder.querySelector(".card_description").innerText = card_data.desc;

                new_card_holder.querySelector(".card_number").innerText = `#${card_data.id}`;

                new_card_holder.querySelector(".card_stat_1 .card_stat_number").innerText = card_data.stat1;

                new_card_holder.querySelector(".card_stat_2 .card_stat_number").innerText = card_data.stat2;

                new_card_holder.querySelector(".card_stat_3 .card_stat_number").innerText = card_data.stat3;

                new_card_holder.querySelector(".card_stat_4 .card_stat_number").innerText = card_data.stat4;

                console.log(new_card_holder);

                document.getElementById(
                    (is_p1) ? "player_1_hand" : "player_2_hand"
                ).appendChild(
                    new_card_holder
                );


            }


            window.onload = function(){

                

                const p1_hand = [{{{ hand_1 }}}];
                const p2_hand = [{{{ hand_2 }}}];

                for(const entry of p1_hand){

                    console.log(entry);
                    generate_card(entry, true);
                }

                for(const entry of p2_hand){
                    console.log(entry);
                    generate_card(entry, false);
                }

            }

        </script>
    </body>
</html>